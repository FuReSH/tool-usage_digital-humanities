

# The Problem 


The way research questions, data, and material manifestations come together in project presentations poses key questions for the digital humanities. We propose that thinking about middleware as a concept and as concrete platforms can help us pay more attention to the ways tools structure our arguments or express thinking in protocols programmed into these platforms. Our concept of platform is broad and includes physical spaces of display and circumstances of presentation, as well as tools for creating such presentations. By paying attention to middleware we hope to show how it functions as a tool for humanities scholars, technology experts, information specialists and designers as they think through and articulate intellectual arguments materially in a digital age. Part of our premise is that though platform structures are often used for their ease or familiarity, they imprint their format features on our thinking and predispose us to organize our thoughts and arguments in conformance with their structuring principles — often from the very beginning of a project’s conception. The same can be said of print forms and formats, and the notion of middleware is not meant to suggest that we are concerned only with digital platforms. 

Understanding connections among the conceptual layer of these platforms as tools for use is a major challenge that requires integrated critical-material sensitivity and strong conceptual-experimental work. We are not interested in trivializing the complexity of this challenge, but rather suggest that the way we approach this question in all its complexity is likely to be an important factor for understanding the conditioning performed by digital platforms and for practical engagement with imagining and making new or customized platforms. A key question for the digital humanities and the humanities at large is how we can create middleware designed for our purposes — or perhaps, from our purposes. 

Wherein lies the difficulty? We suggest that there are several obstacles that make the creation of critically aware, intellectually meaningful, and materially expressive and deliberately structured arguments challenging. Here they are. 


## 1. Inattention to Material support of Knowledge Production 


First, the humanities have a tendency not to be critically attuned to the material features of their own contemporary knowledge production. In spite of recent, useful, work in Software and Platform studies, and related fields on the structural workings and assumptions of these elements ; ; , there is very little critical work on presentation software (such as PowerPoint, for instance, which is ubiquitous), or blogs, or the web as a default platform for digital work in the digital humanities, or software like Omeka as a conditioning device shaping online exhibits (or archives and other presentations). Who has looked seriously at the rhetorical structure that common platforms such as Scalar, Drupal, or WordPress impose on arguments? Scalar and Omeka have developed from within the digital humanities communities, and their features offer a good study of how their designs position them in relation to more domain-agnostic platforms like WordPress or PowerPoint, whose market saturation is a testimony to their supposedly generic character. 

This often uncritical uptake continues a long tradition of ignoring the ways embodiment and argument work in analogue formats, of course, where texts are generally considered without regard to their instantiation in fonts, layouts, or other features of material production. The complex intertextuality of a codex book or the narrative implications of a display in architectural space are not always given their due as an integral part of the production of a work or the experience of it. Designers and architects are trained to think about the ways formal organization of graphical or physical space factors into the production of experience and/or meaning — not in a determinative way, but as an integral aspect of a system of conventions and codes. We come to take for granted the relegation of certain features of argument to footnotes, as surely as we accept the role of the pantry in storing an inventory of goods, though the status of the stored or subordinate entities may be as much an effect as an inherent quality in each case. 


## 2. Attachment to a Service Model of Implementation 


Second, the digital humanities often seem over-constrained by a service model of implementation. In spite of much talk of the collaboration between intellectual and technical dimensions of projects, little discussion of the argument structure of design has emerged to show how methodological and technical work embodies critical issues. We have hardly any examples of projects whose execution can be abstracted into an argument. In other words, we have precious few cases of how a work argues through its structuring protocols, instead focusing on what the argument or database structures might be. A critical edition is not a multitext, for instance, and the demonstration of the difference between them would necessarily engage with the argument structure of the platforms that support them. 

With few exceptions, digital humanists have not taken up the critical tools of literary and historical studies and made them part of the implementation of projects by insisting on interpretative rather than declarative modes of presentation (for exceptions, see Mandell 2012; Klein 2014; Chang, Dooley, and Tuovinen 2002; Emerson 2014; Portela 2013) . Humanists continue to be seduced by tools to whose workings they give limited attention, so they execute their projects (e.g. in network analysis software) without knowing how the results were generated. In traditional humanities, this would be like having a machine perform a literary interpretation that one then explained, but could not account for in terms of its formation. Instead, digital humanists need to push critical issues into the implementation. 

The difference between Scalar, with its intent to support customization of argument structures, and WordPress, which has a hierarchical page, theme, and sub-theme structure, provides a useful contrast. Both have relational databases in their back-end infrastructure (which in itself is a conditioning factor, cf. ), but Scalar is meant to allow multiple points of entry in a presentation, and to support widely varied pathways that are not strictly hierarchical. Whether these distinctions are sufficient to create a critical difference can be debated, but at least they are evident to a front-end user/reader and to an author starting the composition process. Data structures remain a rather unfamiliar area of compositional competence for most humanists, however, and this is crucial since the middleware platforms are all structuring and structured environments. This quickly brings us to the next obstacle. 


## 3. Need of Competencies 


Humanistic scholars who engage with digital projects sometimes seem to leave their critical sensibility behind with regard to the rhetoric of the digital manifestations they imagine and create. Paradoxically, such projects can demonstrate more positivism than the positivism we often (and sometimes erroneously) associate with science and technology. References to a digital artifact displayed on screen are often stated in a construction that begins, This is... (rather than This is constructed as...and by... to show... ) as if the digitization, display, and other features of production did not factor into what is present on the screen. Also, scholars trained traditionally in humanistic disciplines often do not to have the methodological competence and computational rigor for working with data and materials. The digital humanities has a weak track record of incorporating the critical insights developed in critical theory into database structures and ontologies into the design of projects (see e.g. ). 

These critical engagements are harder than they look — what constitutes a data structure that incorporates cultural diversity, exposes inequities of gender, or shows biases of nationalist perspectives? The question is not simply answered by addressing the way a data structure is populated, what is put into its fields or tags, for instance, but how the organization of the fields and tag sets already prescribes what can be included and how these inclusions are put into signifying relations with each other. (An easy case for understanding this is thinking about how gender might be a structured data category. Is a database set up in a binary, two-column, male-female pair of fields? Or is there a single field in which any number of values — some controlled vocabulary and others free text — could be entered? Or are there multiple fields across a spectrum of possibilities with pick one or pick all that apply options. Or can we imagine another type of data organization altogether to accommodate for a continuum or intersectional model of gender?) An argument is made in the ways the database itself is structured, in advance of the values it contains. Cultural values, terms of belief, political attitudes, sentiments, emotional attitudes, and nearly every aspect of human experience have culturally specific, historically determined, and individually inflected expressions of these areas. These are expressed in texts, images, performances, and rituals of all kinds. As we re-represent these in data structures, we have to ask how these structures can be expanded to have some of the sophistication of poetic or aesthetic ones. The critical tools to answer these questions exist, but they come more often from information studies and archival studies than digital humanities. And when they do, they are couched in cultural studies terms of critique rather than as features that support informed practice and alternative design. 

Some of this is a labor/training issue — learning enough computational skill to sketch arguments and ideas in digital form is a non-trivial matter. Some is a cultural issue — the critical reflections on data structures and ideologies that are developed in information studies rarely find their way into the humanities (where the information professionals are too often mischaracterized as mere technologists). 


## 4. Absence of Design Knowledge 


A lack of developed material aesthetics and incorporation of design processes (such as prototyping) into the digital humanities and the humanities means that the material manifestations are often not fully developed. Platforms are often adopted by default. The focus on digitalized cultural heritage in the digital humanities has lead to substantial effort being spent on creating datasets as content (digitizing the papers of someone) rather than understanding the necessity for designing interpretative frameworks (how should the digitization structure present the papers of a political figure versus a poet?). This is true in physical spaces, human circumstances (the witnessing example discussed below), and platforms (printed formats, software, and so on). 

Insufficient resources are expended on designing such frameworks, though these workflows could make for much more powerful outcomes and notions of how to operationalize humanities concepts in digital scholarship. The expertise of a documentary editor, for example, familiar with the many systems of relations (textual, social, political, etc.) in which the documents are active agents, might not have a way to push the hierarchal organization of Omeka, with its files, folders, and collections to reflect the multi-layered cross-currents in the documents. Such an editor might decide, as an alternative, to use Drupal for its taxonomies and elaborate metadata capacity, only to be confronted with the lack of structure in the way that platform organizes its underlying repository. If Omeka provides a view of the collections of documents and Drupal puts them into a single holding pool, then is that materially significant or simply a matter of a compromise and modification? 

The argument structures implicit in these platform design decisions force the user to work within built-in constraints that have implications for the way the front end display will expose the documents. Simple issues such as layering documents, or being able to pull multiple versions of a document into view in a single screen, are almost impossible to do on the fly unless the middleware has built these drag and drop or layered features into the design. To enact a comparison across multiple digitized images, the user might create a work-around by opening multiple windows — making an argument through the desktop as a middleware platform, with the limitations built into that environment (including the lack of memory of arguments made over time through the placement of desktop windows). Our screen interface is a powerfully ubiquitous middleware — but how often do we reflect on the rhetorical difference between a swipe and a click? If the effect is to change the screen display in each instance, does it matter that one seems to push content from view in an infinite flip-chart and the other seems to reveal specific content on request? 

While this description of difficulties certainly stereotypes and simplifies complex interrelations, and does not list numerous exceptions and much excellent work carried out on different levels, it addresses weaknesses both in the digital humanities and the humanities at large. The obstacles — attention to material platforms, need to think beyond a service model of implementation, lack of technical competencies, and absence of design knowledge–are all relevant to the discussion of middleware from a development perspective and from a critical analytic one. 

A few notes on terminology and definitions: We see the digital humanities as a broadly conceived area and contact zone closely aligned with the humanities disciplines and other relevant actors. It is an inclusive field with intellectual, aesthetic and technological engagement and drive. Much work in the digital humanities is organized around projects, and when we use project we do this with the realization that projects are not the only organizational form for work in the digital humanities. Also, the idea of projects in the digital humanities is linked to certain epistemic commitments going back to the early days of humanities computing. 

What we are suggesting is a way of thinking critically about the design at work in the digital humanities, whether done in projects or not. We use the term platform to describe infrastructural, scholarly and cultural systems. However, we recognize that the platform metaphor can be problematic in foregrounding technological resources and obscuring what is underneath and in suggesting flatness and stability or a kind of stage on which work is performed — rather than the scaffolding that structures the work. Furthermore, platforms are discursive as much as material artefacts, and their social, cultural and economic embedding often calls for sales speak from the makers (whether commercial, academic or both) and a unitary, positivistic view of the platform shared by makers and users. 


# Introducing Middleware 


Platforms that support digital humanities activity abound. As noted above, many are purpose-made from within the community — such as Omeka, DocTracker, Scalar, Zotero and others adopted effectively to create or manage content — such as WordPress, Drupal, Islandora, Collective Access, or the ordinary stuff of slideware and publishing platforms such as PowerPoint, Prezi, etc. These are convenient and effective vehicles for structuring offline and web-based presentations of cultural materials (documents, images, maps, sound and moving image files) within the framework of intellectual arguments. But each raises questions about how the platforms themselves frame arguments, define and delimit what can be said through the structuring principles of its design. These questions guide our examination of what we are terming middleware, the platforms that sit between the front end of user experience and the back-end of information architecture, data models and concepts. How do they work in structuring what can and cannot be expressed, presented, or argued in the enunciative system (more on the relevance of this concept in a moment) of our projects? 

Middleware might, on first reflection, seem to be everything in general and nothing in particular — just as the codex book is a highly specific structure that accommodates itself to multiple disciplines and discursive forms (anthologies, novels, manuals, textbooks, reference guides, and so on). But the ways formal structures impose their imprint on thought and argument, and the ways enunciative operations work, are not limited to the domain of digital humanities. Friedrich Nietzsche, railing against the format of the school essay as a form whose imprint had ruined intellectual life, was making an argument against the way the constraints of middleware function . The school essay had conditioned thinking, made it formulaic by its structure and organization. Architect Lars Lerup, in his work in the 1980s on the no-family house was making a similar argument about domestic architecture and the imposition of the program of the nuclear family into organizing principles for space to accommodate its activities . Middleware might have agency, the way witnessing calls forth certain aspects of experience into an apparently objective record (as discussed by and others in archival studies, like , who argue that witnessing is constitutive, not passive). It might be as literal as the ways an academic or institutional space structures some possibilities and excludes others (as per Shannon Mattern’s observations on library architectures, see ). But our discussion of middleware will focus on platforms, data structures, formats, and ontologies that have quickly conventionalized and thus naturalized our ways of thinking about creative and intellectual production in the digital humanities. 

A conceptual dimension of production, like the architectural program referenced above, is different from a platform or a physical space. While we are not trying to collapse these into a single category of coercive technology or instrumental form, we do want to stress the analogies and connections. Our work is mediated by environments and assumptions that are not determinative, but may be defining in more subtle ways. In each case, format elements become formatting features of a system, actively contributing to the way that system works, and in its working, allows for some assumptions to go unnoticed, some possibilities to be supported, and some aspects of argument to be achieved only with extreme difficulty or compensatory adjustment. Our purpose is to expose these workings, and to make their assumptions a part of the conversation about scholarly argument in the digital environment. 

Platforms, spaces and tools are designed, inhabited and used by people. They are inscribed socially, culturally, and as the result of negotiation over time. The notion of middleware should be taken to encompass the temporal entangledness of different layers, perspectives and use patterns that make up intellectual and material programs. Intellectual middleware does not describe a static situation, but rather a changing set of protocols, conventions and assumptions. Furthermore, there is an ecology of systems and platforms at any given time, and while there may not be a de facto choice in many situations (e.g. the institution may require the use of specific platforms), at other times there can be agency in choosing and adapting platforms. As we show below, such choices can be informed by carefully considering the intellectual middleware of such platforms and systems. 


# Middleware and the Digital Humanities 


To date, we could argue that the digital humanities suffers from an overall lack of scholarly impact. Very few examples can be cited of achievements that have had a substantial influence within a discipline or been intellectually comparable to other significant work in humanities fields. Projects may support research, but they have had little to contribute as research to their home disciplines or the humanities more broadly. This is not the fault of the design of the projects, but perhaps, underscores the limits of claims for what the digital contributes to the humanities that is specifically humanistic. Data mining, text analysis, and visualization tools used for or with humanistic corpora produce results that do not deviate in the least from those produced on social science materials, for instance (by contrast, the reading of a poetic work would be considered anomalous if its techniques were applied to a passage in an accounting text). Coming from the other direction, software designers responsible for some of the tools for analysis and display are calling for humanist scholars using these to give intellectual credit for the structure of those displays as expressions of the intellectual design of the software. A Gephi diagram is not a natural expression of structured data, it is instead a distinct expression in a system authored by a programmer responsible for the coming-into-being of that visual form in a precise form. This is a crucial point as well, since it makes clear that what passes for a mere tool is anything but — it is a structuring argument built on top of and expressing data whose own lifecycle of production is usually obscured. 

At stake in thinking about middleware directly is the need to pay precise attention to the way tools structure our arguments or express thinking in protocols programmed into the platform. Common platforms — Omeka, Scalar, PowerPoint, WordPress etc. — do not simply display content any more than a network (e.g. Gephi) diagram does. Highly specific material conditions organize production at every level. The very nature of what constitutes a file, the smallest unit of semantic value, the syntax of connections and relations, means of manipulation or use of intellectual content is determined by the platform’s capacities. Middleware is a set of mediating and remediating protocols. It introduces semantic inflection through organization (are files in trees, folders, flat structures, collections or linked through taxonomies?). If middleware tends to disappear, it is not because it is transparent, but because it sits in an in-between space, between content and consumption as a black box of procedures and organizational operations invisible to view. When we go to the theater, we know there is a text, a play, activity backstage and we see the play unfold between the opening and closing of the curtains. Unless it is a self-conscious modern work of experimental or existential theater, we are not constantly called to attend to the material features of production through every instance of the performance. The middleware of stage, stagecraft, lighting systems, scale and size of the theater, sightlines, and other elements that structure the experience throughout disappear from attention. When we take a moment to consider the specific features of that construct — wings, props, lights, up and down stage areas of action — the mediating conventions pop into view. These elements are what make the production different in character and experience from a work seen on a puppet stage or in a sports arena. The very orientation of the proscenium stage to its audience is a fundamental act with rhetorical force. The incommensurable quality of these three experiences — puppet play, theater performance, arena event — demonstrates the structuring effect of middleware. The same analysis can be applied to analog materials, to the conventions and protocols of print, the features that make a book with a scholarly apparatus rhetorically distinct from a collection of poems or a novel, a newspaper, a phone directory, and other printed matter. 

Our focus on digital humanities requires some narrowing for the sake of argument. Middleware was invoked, above, as a term that includes witnessing, databases, content management systems or platforms, and physical infrastructure. What does that mean in the context of digital humanities? Witnessing is not equivalent to or interchangeable with the testimony being heard, recorded, absorbed, listened to, or transcribed. Witnessing is a mode of attention, a structuring mode. Even before it confers value, weight, or significance, it makes testimony into substance. Witnessing is, fundamentally, an act of structuring a discourse, bringing it into being in a framework of emphases and selections. It is not the content of the testimony, but part of its condition of becoming a structured and received communication. A database is not just data, it is not merely the stuff of quantitative or qualitative material structured into computationally tractable entities. It is the structuring apparatus that makes these entities signify relationally, giving them some possibilities and not others. A database is a mode of discourse, or, to paraphrase Michel Foucault, a discursive modality, governed by rules of inclusion and exclusion. A content management system or platform is middleware that is also a discursive modality. These systems contain a host of protocols scripted into their operations that disappear from view in the reception of their final display. They are also structuring frames that create a semantic inflection through their organizing operations. Physical spaces, particularly institutional spaces, embody programs that organize experience — not deterministically, but opportunistically. 

The traditional classroom is associated with a model of pedagogy (concept) which is codified through a structured set of assumptions about learning, including the role of teacher (in control) distinguished from students (largely being on the receiving end), the idea of a relatively fixed set of things to learn, and learning taking place in a decontextualized and closed situation (cf. Scott-Webber 2004 on agrarian and industrial school floorplans). This constitutes a kind of intellectual middleware, although somewhat caricatured here. These assumptions are materially manifested in the traditional classroom through the position of students (in rows directed towards the teacher) and the teacher (up front, historically often in a physically elevated position), control of media surfaces (one whiteboard or projector screen close to the teacher and controlled by the teacher) and the closed door (a closed-off learning space separate from the world outside). These material manifestations can be regarded as interface, and while specific learning situations can certainly up-end the traditional use of such spaces, the pervasiveness of conventional use, material affordances and institutional expectations is considerable. Importantly, this pervasiveness is not just a matter of the material conditions, but also a matter of deeply embedded ideas about learning associated with that type of space and situation. The strong association of material conditions and ideas is what makes intellectual middleware relevant. 

Other institutional spaces offer other possibilities. The HUMlab space at Umeå, with its multiple screens angled to create a set of point of view systems, connections through position proximity, scale, and other features of the physical space is radically different from a conventional classroom or the seminar room, where a circle of chairs and desks looks at a single screen focusing attention of the group to the front of the room. The very coming and going of individuals is structured differently, the cost of attention and inattention, the modes and possibilities of engagement and exchange are all aspects of the space. In terms of space and infrastructure, the distinctions among conceptual infrastructure, design principles and actualized infrastructure made elsewhere , map well onto the idea of intellectual middleware discussed in this chapter. 

The argument for middleware is not an argument for deterministic readings of platforms, or of software, or of the disciplinary regimes (to use quaint post-structural language) of technologies or architectures (informational or physical). But it is an argument for attending to the rhetorical force and structuring effect of these aspects of our work, thought, and experience. It raises questions about how we think and how else we might, and what the tools for thought are within the humanities as we continue to structure platforms and environments for their digital enactment. 


# How Middleware Thinks 


Most digital humanities projects — museum exhibits, online archives, articles, mapping projects, even platforms for search, query, and analysis — consist of a back-end of structured files and a front-end designed as an interface. In between is a suite of processes and protocols that make the digital assets into a user experience. Interface, however dynamic and interactive, is a display or support for behavior, but the scripts and instructions that are triggered by the interface depend upon the ways the middleware works. Our attention will be to the authoring side of this experience rather than to the user side, with the idea of showing how middleware constructs arguments. We will consider the contrast between presentation modes and content management approaches in common middleware. 

If we argue that a piece of software such as PowerPoint or Keynote (presentation software) is a platform that conditions, even determines, how we make presentations and what counts as presentations, then what does that mean ? Presentation software has very little processing or digital asset management capability. Its functions are fairly limited. If I am using PowerPoint, I am constrained by the frame-by-frame sequence of the slides that are its basic unit. I can embed images, sound, even video, into the slides, but the frame remains. I can make blends, blurs, or transitions among slides, but the slides are still intact. I can reshuffle the slides — their order is flexible. No larger data structure determines the identity of a slide so that it has to be the first, fourth, or follow after or be placed before another. The basic modular unit of argument is the slide. Within the slide I can do various things with the text and embedded files, and I can establish a theme that brands the presentation throughout. Intertextual play of the kind set up in the book format is rare; even if it is possible to introduce a theme and variation within a PowerPoint sequence, its slides are rarely orchestrated in that way. The presentation emphasizes the slide-by-slide singular framed content unit rather than the presentation as a whole. 

PowerPoints may follow print conventions to the extent that they have a title, sections, sub-sections, and often end with references, but they don’t have the navigation system that a book has. One doesn’t turn to page 25 of a PPT, or use an index or table of contents to navigate (although hypertext links can be used to jump between slides). Nor can the content of a PowerPoint be exported as structured data, only as a .pdf, .rtf or a .mov format. I can’t query all my bullet points or search all my headers — the data in the presentation is not structured, it is merely styled. However, the basic slide unit is extremely flexible since none of the data within it is linked to an external structure. Thus editing is easy. Slides can be deleted, duplicated, repeated, and re-sequenced as units. PowerPoint is a flat data structure in which single slides are the smallest structural unit. The argument structure is based on that unit-by-unit sequence no matter how much manipulation goes into the space inside the frames. We don’t want to confuse the plane of discourse, the literal slide-based structure, with that of reference, the argument made, but rather, call attention to how they are related. The literal, linear, sequence of the slides does not cancel the possibility of resonance among features in the slides, but the two are distinct aspects of the format. 

By contrast, a content management system (designed to do just what this descriptive phrase implies, make it possible to work effectively with intellectual content), has multiple levels of structure and granularity. Drupal, a common content management system (CMS), is at a considerable remove from PowerPoint in terms of complexity. What is the basic unit of structure? Drupal has a concept identified as the node — which means any unit of content. That might be a digital asset (an image or other file). But it also might be a record (the structured, field-based form of entering text about assets or as an asset in its own right). Nodes are structural, but not semantic; they serve the purpose of giving the smallest unit of content an identity without constraining it according to what it contains. These units of content can be assembled in many ways. 

Because the Drupal platform is a front end for putting structured content into a database, it is also a means of structuring the database itself. So, if I have thirty-five images and thirty-five comments on them, I can store these as separate nodes and associate them by calling the fields image and comment through a query. This is basic database activity, and the Drupal environment can perform these kinds of operations down to the most detailed level of granularity provided the data is structured properly. Continue with the example of images and comments: suppose they are about related but different fields (images of geological formations from different processes of formation — volcanic activity, silting, erosion, uplift). I can pull out subsets of the slides that match search criteria for each kind of geological formation provided I have included information about that subdivision in the data. That might be an abstract code — I might just number the different processes from 1 to 4 and assign each image and comment to a group, then call them by group without referencing any linguistic term. That would be a structural way to organize the information. I might create a field on the image and comment records that says geological period, and thus sort by term. At the same time, the images might be used for other purposes — say for organizing hikes or pointing out mineral deposits. In Drupal any node or unit of content (e.g. image) can be associated with any topic through use of what are called taxonomy terms. Thus I can take a single image and associate it with volcanic activity, rough terrain for climbing, and pumice, giving it a place within multiple areas of potential use. But each context has to be specified in advance in the data structure in the CMS. By contrast, in the presentation mode of PowerPoint, I can re-use and repeat images on the fly, and recontextualize them readily because the authoring environment is not constrained by taxonomies. 

This is a very preliminary and minimal description of the most basic structure of a database driven CMS (in this case, the Drupal environment) and its expression of the relational nature of the underlying database. Drupal’s discursive modalities are not reducible to this database any more than PowerPoint’s text is reducible to the slide-by-slide structure. But in both cases, there are statements that can be made and statements that cannot, given the constraints of design. 

Taking the example of the thirty-five images again, suppose I decide that I want to create an online exhibit about my rock collection, but only some of the images in the set are ones for which I have samples, and my samples, which I am currently photographing, are not in Drupal yet. Suppose the description of these samples includes information that was not in my geological sample set. I want to recount every place and circumstance, provenance and camping trip, for my personal rock collection as well as my history as a rock-hound within a long family tradition. I have to create a new record format or modify my original record to include whole new categories, and create taxonomy terms that might be elaborated according to year, trip, location, other companions, events and adventures that are all irrelevant to the first set of records. What if the two sets of records overlap, but not completely? I have to go back to the record design with the new purpose in mind. No longer am I making an argument about geological processes, but now, about rock-collecting as an experience. One is structured in discrete units of information, and the other has a narrative framework. Where does the narrative live? In the individual records? Or in its own records, as a text? Every decision calls the conceptual structure of the discourse into question, asks that it be made explicit in the way the information is structured and also related in the actions I can take through the dashboard and various (several, in Drupal’s case) administrative portals. Drupal is extensively customizable — but only on its own terms, and that is the point. 

PowerPoint has no such complicated relational data structure in its organization. It might even appear so simple that it may take a conceptual leap to realize that it is a platform able to store and display a range of data formats, a bunch of visual effects, and all kinds of recorded temporal instructions for play. PowerPoint is a black box in that sense as surely as Drupal, it is just a simpler platform conceptually and technically. Drupal’s little cousins, WordPress and Omeka, are designed to be more intuitive and easier to learn, which means they allow fewer choices for customizing what can be done in their platforms. WordPress has very little sort/search and digital asset management capacity, so it does not allow for the kind of complex relations and allegiances that can be created in the Drupal nodes. Omeka comes with a certain standard of metadata, Dublin Core, built into it. A basic bibliographical standard, Dublin Core works well to describe most digitized assets in the textual humanities, but it won’t work for describing my rock collection, my collecting adventures, or to allow me to link an image of a beautiful hunk of volcanic rock to multiple taxonomies for search, sort, and display. That will have to be done in Omeka through a different mechanism. Also, the structure, ontology and interface of Omeka impose a specific sense of cultural heritage or humanities materials. A key organizational structure consists of collections and items, and the interface normally presents items separately (literally boxed). Among other things, this structure privileges the individuality of the items rather than their connections and overlaps, which in turn structures the narrative and argumentative possibilities. The conceptual architecture of Drupal is combinatoric, linked, and highly granular, and its data processing capacity is industrial strength. It is made to work with enormous repositories of digital assets and to provide or link to many services for their use, some supplied by yet another layer of software (a common one is Islandora, which supports many common operations for digital asset management, such as storage of multiple metadata standards and crosswalks). 

This discussion of a tiny glimpse of the workings of these very different but common platforms (PowerPoint, Omeka, and Drupal) may feel more like a quick look under the hood than a discussion of argument. But these cannot be pulled apart. Drupal’s web of associated assets (nodes) and their repurposing within one context after another, though flexible, is difficult to manage and all has to be scripted. I can’t go into the Drupal repository, for instance, and view all the image assets laid out as if they were units on a light table. Nor can I rearrange them the way I can with PowerPoint slides until I arrive at an order that argues my points. I have to know what I want to call into my argument and make that part of the data in the database, and part of the views, frames, panels, and links of selection and display. Drupal’s arguments take shape in the way the fields are defined in records, the way taxonomies are created to relate content, and the ways the displays can order and sequence information. Moving from one structured unit of Drupal content in a display to another cannot be animated. It can be linked, down to the most minute detail. Navigation through a Drupal site can be as a complicated as any web of connections. Drupal content can be repurposed endlessly, output in XML and other structured formats, while the integrity of the content of every node remains intact. In the PowerPoint instance my content is locked into the structure of the presentation and no explicit data structure exists, no metadata, no relational framework except for sequence. In the Drupal instance, the content is independent of the presentation, but locked into the data structure. Other, very different, ways to take the same information into argument structures would be to use XML or a spreadsheet to create a format for storing the information. The notion of a content model in XML requires that the document elements define the intellectual shape of the information with varying degrees of complexity, but within a nested hierarchical tree, while a spreadsheet’s rows and columns format assumes a similar uniformity of categories of information and instances, but does not allow for attributes or element groupings that give every piece of information in an XML document a specific identity. 

Structuring information in any of these formats already creates an argument, according to the terms of classical rhetoric whose terms are: invention, arrangement, style, memory , and delivery . Combining the structured data with a discursive format — an exhibit in Omeka, a view and/or panel or book in Drupal, a report from a spreadsheet, or an XSLT transformation from XML, takes advantage of every feature of rhetorical activity. 

1) First, invention : the very names and distinctions among fields or categories, has determined what the granular units are for use in the argument. If I keep city and state together in a location name, then I am arguing for their linkage in the argument structure, saying they must always work together in identifying a location, for instance. 

2) Arrangement: this corresponds to the layout and conventions each middleware platform enables. A spreadsheet report has very little layout capability, while a Drupal view organizes the data selections and displays them in various column templates (1, 2, 3 etc. and side-by-side or stacked and so on). But what if I want to introduce an anomaly? Change the layout of a view because the image is particularly dramatic or I happen to have several views of that location? I have to engineer the anomaly and put a custom template into the system. Default options have a way of winning out for convenience’s sake. 

3) Style : features of middleware platforms can be customized to varying degrees. Most content management systems (Omeka, Drupal, WordPress), have themes designed by their developer communities. These establish basic features, such as headers, sidebars, font, and image sizes (the thumbnail image display default in Omeka is a square, a feature that is better fitted to documentary photography than the display of artworks). 

4) and 5) Memory and Delivery : these functions of classical rhetoric are manifest in file formats. Screen resolutions, size, and the ability to have multiple versions or derivatives of image or map files, for instance, are all part of the arsenal of digital rhetoric. Likewise, the traditional, forceful use of gestures, pronunciation, and inflection translates from oral performance to the pinch, swipe, automated slide show (a horror), or other elements of the on-screen display and ways these produce effects. Drop down menus or pick lists, controlled vocabulary or search on strings? These are part of the argument structure across all categories of classical rhetoric, beginning with invention and arrangement. 


# Making Arguments 


Making intellectual middleware can be seen as work connecting materials/data and intellectual questions with material manifestations. As pointed out above, middleware is neither the interface (front-end display), nor the material ( contents ), but the protocols that structure our arguments and express thinking. The design of these protocols (which are linked to data and interface) provides a crucial opportunity to consider what kind of world/s we want the platform or tool to represent. It seems worthwhile to spend time on such reflection and design since it affects (or even determines) the data structures and interface. This is also where we can envision versions of research and pedagogy beyond what is built into conventional tools and established interpretative frameworks. 

Let’s say a teacher of philology wants to raise the question of how reconstructed linguistic forms present particular ways of thinking about language evolution and human culture. This teacher has access to a comprehensive database of reconstructed Indo-European roots with meanings assigned to them and actual linguistic forms from various (assumed) daughter languages over time. Below we briefly outline four types of intellectual middleware (and implementations) in response to this challenge. 

The simplest type of middleware would just structure access to this content, for instance facilitating a query interface, allowing students to search for meanings, language distribution of words with search results listed in a table. This could be a useful exploratory tool to allow students to search for different meanings and see what Indo-European roots correspond to such meanings and how these roots are represented in different languages at different times, but would emphasize the words as atomic units. 

In a second example, a developed form of this idea (a slightly different type of middleware) could also include aggregated values enabling users to see how reconstructed forms are distributed over languages based on the whole database, which would make it possible to see the structural underpinnings of the reconstructive paradigm more clearly. The relations among languages would be foregrounded in this instance. 

A third variety of middleware would start out from models for linguistic change. Traditional philology is based on a branching or tree metaphor (languages diverge and branches split into sub-branches). If another model of linguistic change — such as change based on diffusion (wave model) — was also incorporated, different models could be juxtaposed, explored and illustrated in relation to the available data. The basic models would be part of the platform (hardcoded), and while these could not be changed, students would be able to explore different world views. An understanding of linguistic processes over time and space has to be included in the model. This structuring presentation would emphasize evolution and change over time as well as different models of language change. 

In the fourth example of intellectual middleware, this point about student activity is pushed further. Imagine that students were asked to build models of change themselves based on the forms in the daughter languages ( real , not reconstructed forms) contained in the database. For practical reasons, these models would have to be limited and not all-inclusive. Through using a simple algorithmic platform, students would construct this model through a series of rules and conditions, and the data could then be run through the model. In this case, the student-generated model could be contrasted with the model established in traditional philology. The partial nature of knowledge, the non-linear patterns of language change, and multiple ways languages influence each other and shift inconsistently might become apparent. 

Depending on what approach and middleware we select, the learning experience (and the actual implementation) will be quite different. A key point here is that it is vital to consider different options carefully before building the actual system (and ideally before putting together the dataset). Even supposedly basic concepts of digital assets as discrete items, parts of relations of derivation, moments in processes of diffusion, and objects of analysis of change are all arguments that structure the way a field of knowledge is thought of and the way the display of such knowledge is modeled and thus experienced. The data structures and protocols are reinforced by the design of the entire system, from back-end data to access, display, and use. 

We could extend this analysis into greater detail with regard to any of the examples we have sketched so briefly, or add others. Online learning platforms, for instance, often more focused on distribution of information and tracking students than enacting modern pedagogical thinking, are rarely questioned in terms of the structuring they impose. But we can also extend these to the physical domain. What if I am making an argument that is neither a presentation nor a web display, but a spatial experience? What is the process of structuring content to make an argument that opens across time/space parameters in a spatial situation? Cecilia Lindhé points to how classical rhetorical devices can help structure experiences that are spatially bound . She built an academic installation in HUMlab to explore pre-print notions of church spaces in relation to Virgin Mary as a virtuous role model in medieval Sweden. Rich archival material is enacted in the lab space through a series of experiential platforms (using display, interaction and sensor technology). The idea was not to build a reconstruction of church spaces or to account for all of the archival material or to build a web platform, but rather to allow participants to respond to central research questions through an experiential modality. 

Furthermore, the conditioning provided by software-based intellectual middleware such as presentation software also affects physical space. Slide-based software, as discussed above, is tightly coupled with certain material and spatial configurations. The single slide paradigm normally correlates with a single screen physical setup. For instance, PowerPoint does not facilitate arguments spread over many screens. An art historian interested in using three separate screens in order to juxtapose three artistic traditions, perspectival notions or artists cannot to do so running PowerPoint on a single computer. Three instances of PowerPoint (on separate computers) could be used to carry out the suggested juxtaposition. However, this would not only be clunky, but almost beyond the capabilities of PowerPoint since the software does not support coordination of argument structures in multiple-screen environments. 

In HUMlab at Umeå University there are a number of alternative display setups including eleven screens peripherally placed in a performance space, a triptych screen next to a floor screen and an angled two-screen setup. These setups challenge traditional cinematic and scientific modes of visualization through their very existence and have been used for scholarly projects, large events and artistic installations. For instance, the new angled screen setup with a large stereo projection screen flanked by a large, tall screen (implemented by two projectors on top of each other) in an oblong studio space challenges the immersive, singular paradigm strongly associated with scientific visualization. The setup also challenges the oftentimes physical separation of production and use/enactment in high-end digital projects and the common focus on single platforms in the digital humanities If we are inside a platform how do we engage critically with the conditions and design of that experience? We suggest that the infrastructure in itself is a reflection of such intellectual middleware and the middleware in its instantiated form helps us think. Imagine running an elaborate virtual model, like Rome Reborn, on the stereo projection screen and using the second screen for critical annotation, ongoing discussion of the ontology behind the platform and focusing on details of the scenes being rendered on the main screen — instead of projecting it as a unified immersive model. The precise setup of the space and the infrastructure suggests certain expressive and critical possibilities, and while the lack of very clear, instrumental use can be provocative, it is key to encouraging new scholarship and artwork. There is also a software side to the display and interaction technology in HUMlab and over the years a number of solutions (hardware, software) have been used to create content for these setups. 

For a long time, however, there was one important piece missing. A display system that made it easy to sketch arguments in the various display and interaction spaces. In 2015, such a tool was built to enable participants in the conference Genres of Scholarly Knowledge Production to create arguments embedded in the infrastructure that the venue offered . Use of software such as PowerPoint was disallowed. The display system is the result of middleware thinking just like the physical infrastructure discussed above. It soon turned out that this tool was a powerful help in thinking how different arguments and experiences could be enacted in HUMlab. The tool contains a schematic representation of the spaces and management of decks of media, but it is clear that the live 3D simulation of the space with content (built in Unity, another platform) adds very significantly to the usefulness and exploratory power of the system. Importantly, the tool as middleware also provides conditioning for the scholarly arguments made through the system. For example, although the tool could be used with only one screen or without any digital media at all (keeping everything dark and silent), the foregrounding on multiple screens/interactions points in the software and the configuration of the physical space strongly suggest the use of those resources). The event as a whole became a lively intellectual discussion of middleware – of how ideas, data and representation come together – and this would not have been as successful had not the participants had to engage with alternative modes of knowledge production. The event was designed to lay bare some of the intellectual middleware. Optimizing the use of such a system, however, takes an investment on the part of the author and users who have to design their presentations taking these capabilities into account. 


# Middleware as Enunciative System 


Critical awareness of the constraints of middleware can be taken a step further if we consider their operation as features of an enunciative system. The concept of enunciation arises from structural linguistics, and is used to describe the way subjects speak and are spoken in relation to each other in discourse. The classic work in this field, by Emile Benveniste, focused on the role of pronouns in creating positionality and relations in speech acts. Rather than confining language or middleware systems to the role of communication — as if they were merely vehicles for the delivery of information — analysis of their operation as enunciative systems takes into account the fact that any act of discourse creates a subject as an effect. A subject, in this post-structuralist analysis, is spoken by an utterance, created relationally. Theories of enunciation take into account the power relations of language and representational systems (visual perspective is a powerful system of enunciation, for instance, in the way it creates viewing positions to be occupied). 

The theory was widely used in film theory and analysis (borrowing directly from linguistics) where the subject of the various semiotic systems were structured into point of view (of shots, narrative, sound, editing). Thinking about information systems and middleware from this perspective seems useful as a way to insist on the dynamic and constitutive nature of their operation. Rather than reify the features of PowerPoint, Drupal, or spreadsheets, this approach allows us to ask who is speaking, to whom, and for what purpose, in any situation of information and digital design, and also, who is the created or posited subject of that act of enunciation. Who is the implied you of any display? Where and how is that spoken subject positioned? The introduction of this concept moves away from user experience as a mechanistic study of eye-tracking or tactile satisfaction and rewards, and towards a psychoanalytic understanding of dialogic relations as power relations. For example, the subject spoken by a health care database created without regard for transgender, for instance, imposes a violation on the identity of individuals who identify as neither male or female. The use of data structures to describe geological formations might perform an equally violent act of disregard for traditional uses or conceptions of a landscape within an indigenous community. Taking the stance that all acts of information structuring and modeling be considered acts of enunciation allows the transactional performativity of their effects to be taken into account. Speaking, viewing, and use of middleware are constitutive activities, not simply mechanistic exchanges among autonomous agents. The construction of information systems is not just about representing different value systems, but enacting them situationality. Again, in the physical space this is palpable, as individuals and groups cluster around positions that are advantageous to their purposes — secrecy, visibility, privacy etc. according to sightlines, power positions, surveillance lines and so on. 


# Extending Arguments 


Though very preliminary in its analysis, this paper has tried to make a few basic points that we hope will provoke future critical discussion. First, middleware is a material manifestation of enunciative systems that enact positions and power relations in spatial, virtual, and digital discourses. Second, we should make a distinction between apparent and transparent aspects of middleware. The first, like the basic single frame structure of PowerPoint, are visible but overlooked. The second, like the way query structures work, is rendered almost invisible. We are trying make these equally visible. Third, we think middleware should be looked at in terms of the behaviors and actions they support, beginning with the authoring environment (do I conceive of my argument in terms of slides from a selection of 300, or in terms of the data structure, or in fields in the metadata, as taxonomies, or relations among components?). What is the impact of my choice of middleware on what I can or cannot say in my project and presentation or what the user can know about these argument structures undergirding their experience? How are decisions about the model of the content made, and the connection between the selection of content and a whole or final presentation enabled? How does that act register, become defined, constrained, and rhetorically significant? How do the structuring properties of the platform organize the composition (and inform it from the outset). A blog entry is not a Drupal site is not a Twitter feed. We think a PowerPoint slide differently than we do a record for describing images in a collection. The argument is neither techno-determinism nor media specificity, but a call to look at the performative aspects of these platforms in the way they condition us to work within their forms as well as in the ways they enact argument as structures. 

Ultimately, we are arguing that all presentation space is rhetorically configured (and should be engaged critically). This is true of the regimented scrolling linearity of Word, which expects prose text, and the flexible arrangements possible in PowerPoint, or the template structure of InDesign, which assumes a document consisting of many related pages working in sequence but across a consistent format where intertextual elements are in play. Consider the overview functions in each environment. The slide sorter in PPT, which assumes each slide is an entity, and the continuous stream of text in Word, displayed in the page view, permit a sense of omniscience that is never possible in Drupal. No overview exists there, only views into the data through the content list or other features. Also consider novelty effects, for instance, in Prezi. Does turning a virtual cube to display a new face/facet have any correlation with the semantic value this implies? Is the argument on display really cubical ? Does it have six sides? Are the relations that structure the display the same as those that organize the elements of the argument? We know of very few six-sided arguments, though of course, one might make one, deliberately, to explore this point. And then, might also wonder what is inside that cube whose faces we have seen — what is the content of that virtual volume? The silliness of this exposes the value of the investigation into the structuring rhetorics of middleware. 

Keep in mind that middleware is not interface. Middleware consists of protocols and processes that support and structure the content and context of use. Interface is the front end, the final experience, and rarely gives any insight into the infrastructure back-end. Middleware is the in-between that sets terms/conditions of organization and structuring. We could elaborate further by taking specific cases, wonderful examples of highly developed digital humanities work (e.g. Die Fackel, Old Bailey, Perseus Project, Whitman Archive ) and look at the way the intellectual models of their content and use are argued within the structure of their platforms, not just in their final display. 

At stake are other issues as well, such as long-term sustainability. Many of the middleware platforms are destined for (or used with disregard for) rapid obsolescence. File formats last longer than platforms, so storing content separately from platforms is a wise investment. Creating highly specific middleware platforms, for instance, those for three-dimensional reconstruction of historic sites, that then hold content, may prove to be an investment with little long-term return. The models are spatial, and assume space as a given, using it as an armature for placement of notes, primary materials, and so on. But how can this be edited? Output? The middleware locks the content into a structure that may not even be an argument, just an assumed given . Metadata schemes, elaborately conceived according to models of an archive, a field, a disciplinary domain, sometimes turn out to be unusable (all those iterations of DTDs in the early stages of digital humanities) because their intellectual structure was at such odds with the experiential engagement with the material objects they were meant to represent. 

Also at stake is the question of what arguments we want to make and how we might create environments that support them. Contrast, comparison, details, close and distant approaches to analysis, reading, and even the collaborative character of scholarship, partial knowledge and blurred boundaries among types of knowledge or objects are all parts of our interpretative habits and traditions. Are these argument structures supported by current platforms? Can we think of other types of arguments we want to make and if so, how could these be manifested? What about traditional humanistic compositional strategies such as producing evidence, trails of associated materials, counter-arguments, commentary, asides and alternative arguments? There are several reasons why it is difficult to consider argumentative needs in relation to digital platforms. Firstly, argumentative structures and material manifestations cannot be easily separated, which means that both need to be considered at the same time. We suggest that the idea of intellectual middleware can help this process as it sits in between materials and interface. A second difficulty is to simultaneously critique and create middleware and digital platforms. Here we suggest that we need to expand our practice to incorporate design processes that more clearly integrate conceptual, critical and material sensibilities. It must be easy to critique and make at the same time and the digital humanities needs to be agile and experimental (especially at early stages of projects) as well as long-term sustainable and capable of managing large-scale projects. 

Intellectual middleware sits in between back end (data, concepts, research concepts) and front end (interface), which means that middleware cannot be seen as separate from these other levels or from the broader cultural, social and material world. Not only does middleware reflect cultural and social systems in their making, but it is also enacted and interpreted together with other people (whether in the same room or not) in particular contexts. There is always an ideational and intellectual side to middleware, and middleware is always situated socially and culturally. The intellectual inflection of middleware always has to have some relation to an intended material instantiation and to any available data and will therefore be more tangible than abstract thought. Looking at the material inflection of intellectual middleware, it would similarly normally not be concrete matter, but rather the structuring of such matter. In fact, ideally these inflections will come together in the articulation of protocols, principles and structures. 

An example can be provided by thinking of various principles of manipulation or engagement that could be situated at the level of middleware. These might include layering, perspectivation, extensible juxtaposition, opacity and scale. In the philological example discussed earlier, juxtaposition would be an important principle for considering and comparing different models of language change, which in turn would be materially manifested in the interface. Similarly, an alternative type of presentation software for art history and theory might be based around this principle — extensible juxtaposition — to allow the comparison of different periods, pieces of art or artists (drawing on the traditional dual use of slide projectors extended to realize the dream of Mnemosyne envisioned by Abby Warburg in the 1920s . Layering of information is another important principle, which is both conceptual and material. Layering is key to geographical information systems, but could be used more extensively than now to break down the flatness of many digital projects and to enable the provision of critical readings, annotation, and an awareness of how different datasets contribute to the establishment of a seemingly singular point of view. Another way of deepening data analysis and interpretative power is to engage with different perspectives of a data set or a research challenge simultaneously, rather than approaching digital projects with the goal of a single outcome. A scholar interested in representations of the struggles of any particular culture or sub-culture may want to enact alternative viewpoints based on materials from the community in question as well as different governmental bodies and not just give access to the materials or ready-made positions, but enact different perspectives. In terms of interface this could be done through using multiple screens (one for each perspective). Or as a scholar at Umeå University working on this theme suggested when seeing the HUMlab angled screenscape with its 3D projection screen and associated glasses for the first time: have each pair of glasses call up a different perspective and worldview. 

In interface theory, a basic design decision is made between showing the knowledge structure/organization of the information in a site/collection/project (maps, photographs, documents etc.) and presenting options for behaviors (search, browse, display etc.). In general, simply making the collection contents available is like sending a museum viewer into the storeroom. The organizational structure imposed by the registrar (in the museum example) can be made more useful to a user through supporting behaviors ( Show me all paintings by Rembrandt, rather than Let me into the shelving area where all works of Renaissance art are stored by size ). The behaviors to be supported, it turns out, are not those that depend upon memory, but rather, those that support search and use. Memory doesn’t work effectively through structures but instead through processes, cues to behavior generate response. The arguments of middleware are protocols of use that talk to the memory structures, the shaped, already processed, arguments of the digital assets. Then the middleware features produce a secondary argument through language/presentation in a graphical, spatial, or audial interface where hierarchy, proximity, juxtaposition, scale, sequence, proportion, color and timing of display are enabled by the click, drag, drop, enter, search, and play functions that order our behavior. In all of these, we are subjects spoken by a system — of rules and positions that discipline our authoring process and the intellectual arguments we can produce. Each platform permits some things and not others. Middleware shapes our access to inventory, organization of materials and of their mustering into use, of the style in the particulars of discourse, of memory in the roles of refresh, recovery, and rate of display, and of delivery in the specifics of responsive design, timing, tactile interface and so on. But it also programs us to perform our arguments to conform with the learned habits of its features and formats. 

As to enunciation? It is always context co-dependent. It relies on shifters — terms whose value can only be determined in situ. I and you are such shifters (by contrast to she/he/they/them which may take on a stable relation to their referents). Space and time, here/there, now/then are shifters, though the second term in each pair can be given a stable referent. These shifters are constituting structures of discourse. Because the you is always being created in the process of speaking, constructed, positioned, defined, it is linked to an articulating I which is also in process. The dynamic between them can change their relation to the power and meaning of the language act. Linguists intent on finding features of language as a universal human system note that the distinction between I/you is something that is present, at the very least, implicit, in every human language system. If we suggest that middleware contains rules for conditions of utterance, of production, then we ask who occupies the I or you position in any digital enunciation? You know that only by being present to the utterance, or its representation, that a place holder is filled by the speaker. This matters because the production of enunciated discourse also produces and enunciated subject, that is, not an individual, but a position in relation to the discourse, its power structures, and its operations. For Julia Kristeva, this formed the basis of the analysis of the subject in a politics of linguistics and semiotics. For Jacques Lacan, this became the foundation of a theory of the subject of language. Neither assumed a speaker who uses language as a subject , but rather, see the constitution of a subject as a language act. (Language is not something the subject uses, but something that makes the human subject.) This changes the dynamic production of a subject through enunciation that can also be identified in the structuring principles of interface and middleware. 

Teasing out the precise modes of address that middleware builds into its protocols so that these are manifest in an interface is a little tricky — I/you he/she are present in language, but seeing/describing the working of point of view systems of the graphics, the positioning of viewers into a place/time, suturing and interpellation of subjects into discourse is more complicated. If a web page offers a window with an ad in which I am directly addressed by the language, the look of the actors, and by a direct bid for my involvement in either playing, pausing, or closing the window, then I am being addressed as a you within the structure of the discourse. But just as surely, the apparently neutral display devices of a newspaper page do the same things, they are just harder to spot. Why does it matter? In every instance of communication, someone is being addressed by someone for some purpose and the agendas of this constitutive work are generally obscured by the familiarity of the discourse structures. The power relations disappear behind conventions. 

We need to be attentive to such structuring when planning and building digital tools and platforms. Intellectual middleware can help us be more attentive to structuring across concept, data and interface. Importantly, middleware should not just appear or be taken for granted, but needs to be the result of intellectual, iterative and materially grounded processes incorporating appropriate expertise and infrastructure. 


# Conclusion 


In conclusion, we hope that by introducing the notion of middleware we can address some of the processes, visible and less so, that are shaping argument structures in digital humanities projects. Middleware has intellectual, technical, practical, and experiential dimensions. Our hope is that strong middleware work will result in better tools for sketching, thinking and composing for the humanities as well as a higher degree of critical awareness in relation to existing tools and platforms. As a community we are still in the early phases of designing platforms for our work, and at stake is how we may think as well as what we may think as we struggle to design environments that contain tools for thinking in arguments rather than displays of thought whose production processes disappear in the final view. 


# notes

[^1]:  A striking contrast is Donald Presziosi’s reading of the
                            ritual procession up the hill and through the Parthenon, with the
                            orchestrated eyelines and views, or certain readings of the graphical
                            structure of poetic works as an integral semantic armature.
[^2]: 
                            Supposing the reading were as basic as putting all words in a
                            text in alphabetical order, something a computer does handily, and
                            which, then, would require a human reader to interpret in a meaningful
                            way for its structure not merely its word list.
[^3]:  A project like the Walt Whitman Archive, for example, is
                        clearly research, substantive in all ways, but it is never cited for its
                        arguments, only as a resource. Its makers would argue, and rightfully, I
                        think, that it does contain rhetorical features, but these are not readily
                        extracted or paraphrased.
[^4]:  Obviously in some circles
                        such a reading would be hailed as a triumph of conceptual work and poetic
                        imagination.
[^5]: 
                        Precedent for this critical engagement exists in the apparatus
                        approach to cinema studies that emerged in the 1970s and 1980s in work by
                        Jean-Louis Comolli, Jean Baudry, and others.
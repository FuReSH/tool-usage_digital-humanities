This paper will discuss how our newly prototyped

POEMAGE visualization tool (see McCurdy et al, 2015), created to identify and visualize complex sonic relationships within individual poems, has provided poetry scholars with new ways to identify and conceptualize metaphor, which has previously been considered computationally intractable because of its semantic and syntactic complexities. It focuses not on the tool's technical details but on the ongoing retheorization of poetry it has engendered,

Close readers are trained to connect every element in a poem to every other in an ambiguous, shifting complex of meaning, which the reader, bringing her own complexities to the process, activates. This poetic dynamic makes computational analysis and visualization of any aspect of poetry a challenge. The goal of our research team has been to take a single poetic element—sound—and treat it computationally and visually at a level of complexity that will make POE-MAGE useful to poets and scholars performing sophisticated close readings of poetry, even as it makes poetry more accessible to students and casual readers. Though sound interacts with the other features operating within a poem, unlike most other features it can be looked at in its own terms and is subject to computer analysis through quantification.

As we began, poet Julie Gonnering Lein and I sought to preserve poetry's qualitative, aesthetic experience; computer scientists Miriah Meyer and Nina McCurdy sought to address open questions in their field. Both goals required moving beyond what the machine could already do. Off-the-shelf software can see exact rhyme quickly, as can a good reader—who will swiftly move on to look for sonic relationships that don't replicate themselves but enact disruptive changes that are hard to identify computationally. To capture the progression of sonic clusters as they repeat in different and evolving combinations not only within but across syllables presents a computational problem that required our technical team to develop RhymeDesign, which allows users to query a broad range of sonic patterns within a poem and to design custom templates to query patterns we haven't imagined. Built on top of RhymeDesign, the POEMAGE interface visualizes and allows users to explore interactions of the queried patterns.

In performing this work, we have looked for (and not yet found) computational breakthroughs that might bring metaphor within reach, a process that has required us to consider closely how metaphor works. The difficulty with metaphor inheres even in simple instances. Getting the machine to understand why “Hope is a bird” (or, more problematically, “‘Hope' is the thing with feathers”) is a metaphor but “Juliet is a Capulet” and “Karen is a Carpenter” may be either similar or different statements of fact is not straightforward.

Poets as different as Dickinson and Donne play complex metaphors out across entire poems in elaborate and shifting figural structures. To develop a tool that can reliably identify metaphoric relationships as POEMAGE identifies sonic relationships—in real time across the entire poetic field—would require the solution of multiple open problems in computer science.

However, recent readings of poems by Dickinson and others, undertaken using POEMAGE, suggest that it is possible to use the tool to access some metaphors not directly but indirectly, leveraging the fact that both rhyme and metaphor operate by substituting one word for another that is different-but-similar, and that inevitably sites of sonic difference-in-similarity point to semantic difference-in-similarity as well. In close reading, we have noted that places the machine marks as being sonically “interesting” are also sites of metaphorical action, and that this action often inheres in, rather than simply existing alongside, the sonic relationships being indicated by the tool. This inherence can emerge through various kinds of sonic relationships, including but not limited to homonyms like “knot” and “naught,” which POEMAGE shows in Bradstreet's “Prologue,” and eye-rhymes like “blood” and “mood,” which it picks up across Pelizzon's “Blood Memory,” about menstruation. In presenting these words as related, even conjoined, the machine opens a space for us to tease out figural connections between a loop in a rope and nothingness, or menstrual blood and emotional pain.

A more complex example of metaphor developing through sound occurs in Dickinson's #313:


Figure 1: The user selects from the sonic rhymes available in the left-hand panel. The middle panel shows by color which words are implicated in a particular rhyme and which share phenomes. The right-hand panel shows how various rhymes flow through the poem.

The visualization, which shows words that connect with “soul” through specific sonic relationships, makes clear at a glance that “soul” is sonically implicated with virtually every other word in the poem, though of course it is more strongly associated with some words than others. Its identification with “you” and “your” is notable, but I am more attentive to its strong links to “so” (a perfect rhyme and identical except for one dropped phoneme), “slow” (which deploys exactly the same three phonemes, with the second two reversed), and “still,” which begins and ends with the same phoneme. Here, then, the “soul,” identified with “you,” is also sonically and so (because words mean) semantically identified with, in this order, intensity, slowness, and stillness. Beyond this, the tool invites an unlikely leap: the connection of “soul” with the poem's last word, “paws”—a big enough stretch that I am not sure I would make it without the tool's suggestion. This sonnet, which ends with what should be a rhymed couplet, teases by failing to do so. However, the tool's connection of “paws” with “slow” and, through “slow,” to “soul” and finally “still,” may suggest to the attentive reader an absent but implied homonym, “pause.” Here, through an indirection of sound, the poem creates a semantic “rhyme” between “paws/pause” and “still.”

Another case arises from our group's interest in uncertainty analysis, rooted in our understanding of ambiguity as a fundamental function of language, which led us to include in POEMAGE a “show uncertainty” button. Even beyond vagaries of accent, numerous words—tear comes to mind immediately— can be pronounced in more than one way, and mean differently depending on pronunciation. Every such word requires the machine to make a “guess”—a statistical prediction—about how the word is pronounced within the poem. The “show uncertainty” button allows the user to see words with alternate pronunciations as well as how the machine has chosen to pronounce them.

In “Night” by Louise Bogan, the tool mishears

[short i] “wind” as [long i] “wind” (note that it rhymes with “tide”:


Figure 2

Given its instructions, and the overwhelming probability that any one-syllable word comprising a beginning consonant and “ind” will have a long and not a short vowel, the computer had little choice but to make the “judgment” it did, even though the proficient human native speaker would not make this delightful mistake. In this “mishearing” of the poem, an inlet winding becomes “restless,” and in this restlessness the central metaphor of the poem takes shape. Through such reading, we can see that tools designed to help forestall error in science may reveal disturbances that add to the richness of a poem by opening interpretive space and not only the possibility for but the actual presence of metaphor.

Of course, “getting at metaphor” in this oblique way, even if we give it a separate button in the tool, is not the same as creating a tool that will algorithmically identify and visualize metaphor through its syntactic or semantic construction. However, in some cases this method may still be useful, especially for users who believe, as we do, that the purpose of any visualization is not to replace human reading but to send us back to the poem. An unexpected by-product of our tool, it is already provoking rich readings, which show that shaping our queries about sound so that the machine can answer with metaphor helps us understand dynamics inherent to poetry, which invites readers to connect every feature to every other feature. Thus, POEMAGE furthers the larger goal of reliably identifying metaphor through computational methods. It also suggests ways forward in our overarching goal of identifying such complex features for visualisation in their own right.

These are just a few instances among many in which POEMAGE queries, by locating sonic difference in similarity, have identified places in poems that are not only sonically but metaphorically rich. Though we often believe the complexity of language may create an obstacle to the computational analysis of poetry, this argument represents a re-theorization of ways in which a tool originally meant to aid in one kind of analysis can give access to information and insight not originally predicted or even sought, not in spite of but because of poetry's linguistic complexity.

Bibliography

Abdul-Rahman, A.J, Walton, S., Bemis, K., Lein, J.G.,

Coles, K., Silver, D., and Chen, M. (2017). “Re-spatialization of time series plots.” Information Visualization, Sage Journal, forthcoming.

Abdul-Rahman, A., Lein, J.G., Coles, K., Maguire, E., M. Meyer, M., Wynne, M., Trefethen, A.E., Johnson, C., and Chen, M. (2013). Rule-Based Visual Mappings— With a Case Study on Poetry Visualization. Computer Graphics Forum 32, pp. 381-390.

Chaturvedi, M., Gannod, G., Mandell, L., Armstrong, H., and Hodgson, E. (2013). Myopia: A Visualization Tool in Support of Close Reading. Digital Humanities 2012. Hamburg, Germany. 18 July 2012 .

Coles, K. (2015) “Ghost (in the) Machine.” Keynote lecture. Australasian Association of Writers and Writing Programs Annual Conference. Melbourne. Dec. 1,.2015.

Coles, K. (2013). “I Don't Care About Data.” Panel presentation. Digging Into Data Challenge Round Three End-of-Project Conference. Glasgow, Jan. 27, 2016.

Coles, K. (2015). “In Motion in the Machine.” Invited lecture. Poetry on the Move/International Poetry Studies Institute. Canberra. Sept. 2015.

Coles, K. (2016) “Show Ambiguity: Collaboration, Anxiety, and the Pleasures of Unknowing.” #Vis4DH, InfoVis 2016. Baltimore, October 24, 2016. IEEE Transactions on Visualization and Computer Graphics 23, (forthcoming, 2017).

Coles, K. (2014). Slippage, spillage, pillage, bliss: Close reading, uncertainty, and machines. Western Humanities Review, pages 39-65.

Coles, K. and Lein, J. (2014). Turbulence and Temporality: (Re)visualizing Poetic Time. Things My Computer Taught Me About Poems. MLA2014. Chicago, IL.

Coles, K. and McCurdy, N. (2016) Developing and Sustaining Collaborative Research in the Humanities. Panel Discussion. MLA2016. Austin, TX. Jan. 2016.

Dickinson, E. (n.d). Facsimiles in the Emily Dickinson

Archives, Amherst College Digital Collections, Am-herst.College Library. Open source.

Hirsch, E.D. (1967). Validity in Interpretation. New Haven: Yale UP, 1967.

Lein, J.G. (2015). Computers in my Classes: A Pedagogy Round-Table on Workshopping (With) the Digital. Panel Discussion. AWP2015. Minneapolis, MN. April 2015.

Lein, J.G. (2015) “Digital Humanities and Dickinson's ‘Tell': Recounting Poetic Encounter.” New Work on Dickinson: Flash Talks. Modern Language Association. Vancouver, BC Jan. 2015.

Lein, J.G. (2012) “Seeing the Sonic: Aesthetics, Poetry, and Data Visualization.” Aesthetics Reloaded. Aarhus, Denmark. Dec. 2012.

Lein, J.G. (2014) Sounding the surfaces: Computers, context, and poetic consequence. Western Humanities Review, pages 84-109.

McCurdy, N., Dykes, J., and Meyer, M. (2016). "Action Design Research and Visualization Design." Proceedings of the Beyond Time and Errors on Novel Evaluation Methods for Visualization. ACM, 2016.

McCurdy, N., Lein, J.G., Hurtado, A. (2015). “Deep in Poetry: Improvisations in Tech, in Text, in Time.” IEEE VISAP 2-15. Chicago, IL.

McCurdy, N, J. Lein, K. Coles, and M. Meyer. (2016). Poe-mage: Visualizing the Sonic Topology of a Poem. IEEE Transactions on Visualization and Computer Graphics.

22:1, pp. 439-448.

McCurdy, N., Srikumar, V., and Meyer, M. (2015). RhymeDesign: A Tool for Analyzing Sonic Devices in Poetry. In Proceedings of Computational Linguistics for Literature, pp. 12-22.

Ramsay, S. (2011). Reading Machines: Toward an Algorithmic Criticism. Topics in the Digital Humanities. Ed. Susan Schreibman and Raymond C. Siemens. Chicago: U of Illinois Press.

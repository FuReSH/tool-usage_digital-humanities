
At the 2011 Convention of the Modern Language Association Stephen Ramsay stirred up a controversy that had been smoldering within the Digital Humanities (DH) community for a while. In a lightning talk Ramsay provocatively asserted that digital humanists should be able to code or else they were “out”. Ramsay’s statement met considerable criticism (Ramsay, 2013a, 2013b). Ten years on it would probably not provoke as strong a reaction as Ramsay witnessed in 2011. However, it has also not become more clear to what extent programming skills are – or should be – a requirement for practitioners in the field of DH (cf. O’Sullivan, James, Jakacki, and Galvin 2015; Callaway et al. 2020; Van Zundert, Antonijević, and Andrews 2020).  

This paper reports on a large-scale survey into the role of code in the digital humanities. The survey used an online questionnaire to investigate what the target community understands by ‘code literacy’, its relevance for the field of DH, and how it can be promoted among students and researchers. Answering these questions allows us to suggest, first, a shared definition and vocabulary for talking about code literacy grounded in the community’s own conceptualizations and norms. It also serves to make recommendations for situating code literacy sustainably in (digital) humanities curricula.  

The question of code does not merely concern the availability of practical skills that might be convenient to handle, for instance, digital texts. Rather the matter goes straight to that wretched question at the heart of the community: “What is Digital Humanities?” To code or not to code presents a dichotomy that is strongly coupled with epistemological choices, for which matters whether 5 or 95 percent of a community of practice thinks the ability to create code is an essential analytical faculty or merely a possibly handy tool.  

There is no lack of opinions and discussions on the topic, but most are based on anecdotal evidence and personal experience. Some analytical work has been done (cf. Callaway 2020; Van Zundert, Antonijević, and Andrews 2020) but a thorough, comprehensive investigation that both quantitatively and qualitatively surveys the digital humanities landscape with regard to the question remains wanting. For that reason we decided to carry out an investigation in great depth and breadth.  

A comprehensive literature review (Webster and Webster 1985; Hockey 1986; Dobberstein 1993; Tafazoli, Parra, and Abril 2017, Tannenbaum 1987; Vee 2013; Montfort 2015; Melgar, Wigham, and Koolen 2019; Earhart et al. 2016; Spante et al. 2018; Potter 2010; Piotrowski and Fafinski 2020; Vee 2017; and so forth) served to establish a conceptual and analytical framework around the issue of ‘code literacy’. Our quantitatively-oriented approach consisted, given the complex nature of the topic, of a mixed-method (Timans et al., 2019) online survey that was designed and tested in several reflective iterations over the space of seven months.  

The survey gathered demographic information about the respondents, information on their career levels and phases, self-estimations of code skills, pedagogical context, teaching needs, and provided the ability to submit a definition for ‘code literacy’. The survey was globally announced through most well known DH channels. It yielded 399 completed responses in 2.5 months, which provided us with a solid basis to correlate the scores on the various variables with characteristics of given code literacy definitions.  

Closed questions have been statistically analyzed to establish significant correlation between variables. For the open question on the definition of ‘code literacy’ we followed an inductive approach to coding the results. Overlapping samples representing more than two-thirds of all answers were subject to open manually coding to establish inter annotator agreement and a shared set of codes. These codes were then applied to the full data, after which axial coding resulted in a hierarchy of aspects that captures all code literacy aspects shared importantly between many definitions. A methodological overview and first results will be published in DH Benelux Journal (Bleeker et al., accepted for publication).  

Our initial analysis focused on representativeness, demographics, and their relation to views on code literacy. Results indicate that 93% of a representative sample of the DH community finds code literacy ‘at least somewhat important’ to ‘crucial’ while 7% of respondents found code literacy not important at all. Obviously distribution varies with academic background, career level and phase, and self-estimated competence, but overall a majority consensus is clear, even assuming a considerable self-selection effect within the survey’s audience makeup. 

The fine grained data allows us to infer many more observations and details. In our presentation we will further unpack these results. We will expound what skills and epistemological aspects crucially relate to code literacy according to the respondents. We detail differences in the interpretations and role of code literacy across humanities disciplines. The data also allow us to list the distribution of teaching needs as to skills and techniques, and how current levels of code proficiency were attained.  

One of our findings is that ‘context is crucial’. That is: the code literacy skills most valued by the most code proficient scholars tend to become developed in the context of research where there is a clear methodological motivation to do so. What also becomes clear from the data is that most code literate scholars, no matter the (self-estimated) level of code literacy, are dissatisfied about their coding proficiency. This provides further evidence that there is a discrepancy between the specific code literacy requirement in DH methodology and the abilities (e.g., within university curricula) to acquire these skills in a concrete humanities context. 

Our observations allow us to propose ways for DH scholars and students to develop their code literacy skills, and to provide evidence-based suggestions for the incorporation of code literacy training in curricula. We will disclose results from our current research, notably an ontology of skills based on the practices described by participants through the survey. The ontology thus provides an evidence based means of discussing code literacy, its aspects, and related skills. We hope it will be productive as a resource for planning elements of code literacy training to be embedded in curricula. 


# notes

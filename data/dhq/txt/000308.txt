

# Forerunner 


In summer of 1992, still holding the chair of New German Literature at the Ruhr University Bochum, Friedrich Kittler announced a weekly colloquium for advanced students Literature and Computer Sciences I , followed by Literature and Computer Sciences II the next semester. Later, at the Humboldt University in Berlin where his chair was called History and Aesthetics of Media , until his retirement in 2008, Kittler customarily dedicated two of his eight-hour teaching load to computer studies. Graphic programming in C in summer of 1994 actually started out as a crash course in basic knowledge of the von-Neumann design and the language C. The curriculum went on to Assembler-classes. In the mid 1990s the courses served to get a Silicon Graphics workstation into operation. (This worked out for some of his students, not for Kittler.) Computer acoustics was addressed by the end of the nineties. At least officially, since there was no rigid syllabus. Instead, each participant would bring up what he (there seldom was a she) was working on, e.g. developing maze-solving algorithms inspired by Claude Shannon’s toys, Markov chains for a Mind Reading Machine or a card indexer . Kittler’s own long term interest was in raytracing and radiosity, two alternative procedures for generating computer graphics. Raytracing algorithms calculate paths and angles of light beams resulting in the pixel-by-pixel buildup of brilliant hyper realistic pictures; radiosity algorithms calculate diffuse reflections from various objects resulting in a growing luminosity within a given picture. Whereas the mathematics involved in raytracing operate with the laws of light reflection and refraction known since antiquity and elaborated by differential calculus in the 17th century, radiosity is based on the cosine law Johann Heinrich Lambert formulated in his Photometria (1760) and on 19th century thermodynamics. The gaia scienza fostered by Kittler comprehended the history of computing as it began long before the computer was invented. 

What started out as a major call to all of his graduating, graduated, and post-doc students to fight the notorious computer illiteracy which Kittler generally blamed the Humanities for, soon shrank to a small elitist circle. As Markus Krajewski, one of the happy few, summarizes, Kittler wanted to establish a real computer literacy. And our group was both the justifying nucleus of this demand and his evidence of possibility. 


# Godfather 


Within the broad field of intersections between Computer Sciences and Humanities comprised by the Digital Humanities today, Kittler’s teachings may well grant him the title of a forefather. However, there is a certain restriction. Kittler did not take part in the development of any of the fabulous tools that today make Digital Humanities a flourishing interdisciplinary research field. Even worse: From a media-theoretical viewpoint Kittler’s notorious statement There Is No Software ultimately questions DH’s right to exist. From a practical viewpoint, however, in 1992, he seems to have pronounced another call of Cassandra’s. The postmodern Tower of Babel , e.g. the hierarchy of software layers operating like one-way functions without the possibility of tracing their operations back or down to the hardware ; has piled up higher and higher. What in the early 1990s was analyzed as the cryptography of programming languages, today has escalated in digital objects and services, cloud-networking and distributed processing. Still, there is no working around Kittler’s bottom line, that is to say that Turing’s paper machine set the principal switch of all possible discrete computers and all hardware design still is von Neumann-architecture. 

The historical, theoretical and political dimensions of Kittler’s provocative insight have been discussed and may inspire further discussion ; ; . What is important to note here is Kittler’s paradox of denouncing the non-existence of software while passionately producing it. It leads to the question of what kind of computer literacy he aimed at. The answer is not encouraging. Since Turing, as Kittler repeatedly praised him for, was the last programmer to prefer reading machine out-put in 0s and 1s to decimal computations , the next level within the grasp of an ordinary human brain is assembly language, which only uses commands that correspond to the machine’s code instructions. The closeness to the hardware comes at the price of an increasing loss of portability (this is why, for ordinary use, C or C++ were okay). Kittler’s cure hardly seems recommendable today. Anyone who has ever been attracted to give up one’s humanity and become a machine will have to face that the hardware development ever more expands underneath the aforesaid Tower. Raytracing and Radiosity algorithms, for example, nowadays are implemented or sunk–in chips. 

In the end, Kittler’s relevance for Digital Humanities may be the role of a daunting godfather. In discussions about what Digital Humanities might be, not as a scattered field of applied studies amending the toolbox of the old Humanities, but as an academic discipline with a programmatic approach in its own right, there is constant reference to Kittler. Interestingly, the clue here is his habilitation treatise on literature Discourse Networks 1800 / 1900 . In the afterword to the second edition, Kittler defines the term as the network of technologies and institutions that allow a given culture to select, store, and process relevant data . While this definition surely offers a common ground, the question arises whether updating Friedrich Kittler’s media analysis to a discourse network 2000 is possible and further whether Kittler’s approach is apt to fulfill such a claim , . 


# Object of Research 


Considering the gap between today’s digital culture and Kittler’s media theory, the latter seems to be in need of historiography, as Claus Pias recently ascertained. To provide an epistemological account of Kittler's theory the task of historians has to start with dating (its) underlying media-technological conditions . These, in Pias’ discourse analysis, come down to the personal computer, itself being a product of the American hacker’s movement of the 1970s. In the 1980s the hacker’s culture of bricolage and hands-on reached its peak and came to a historical closing as the hardware spread all over the desks of Western homes. The hacker turned into a historical figure. While Kittler, according to Pias, played around with the personal computer just like innumerous teenagers did at the time, he was unique in that he was able to conceptualize it. In the computer he found the logical and material inherent or built-in media theory . 

Finally, in Kittler’s doings Pias sees a coupling of the personal computer and the habilitation, that is hacking around on the one hand, and producing a theory of literature and media on the other. Hence, Kittler’s Discourse Networks is a hacking of Literary Studies . This is a tempting thought or at least a tempting wording – but it is utterly wrong. Pias simply forgot to ask the question that Matthew Kirschenbaum posed via Twitter: Do we know when Friedrich Kittler got his first computer? 

According to the records in the German Literature Archive in Marbach, as the following Indexer model research will show, Kittler purchased his first PC in 1989. The writing of Discourse Networks , however, was finished in December 1981. Since the years in between record intense researches on Claude Shannon and Alan Turing, it would be more to the point to reverse Pias’ suggestion. Rather, the theory shaped the experience of the personal computer . But that would be only half way true. 

In 2008, Kittler claimed in an interview that in his life, he whizzed through the whole media history and picked up everything. He lists books, typewriters, radios, gramophones, Super-8 films, and a Moog-style monophonic synthesizer and a Harmonizer (i.e. a digital pitch-shifting device) he built himself. The latter he actually refers to as computers , since in the end he started using Intel processor-chips. There was the farewell to the analogue. Before he took up his chair in Bochum, where his students would finally force a personal computer upon him, he felt the need to upload all the mathematics he hitherto had worked out with a soldering iron . 

Though Kittler’s self-disclosures have to be dealt with carefully, this one cannot be neglected since the German Literature Archive keeps the material testimonies. Regarding Kittler’s own media practice, historiography has the chance to match hundreds of thoroughly typed papers e.g. to The Mechanized Philosopher , various file card systems to Die Nacht der Substanz , circuit diagrams and layouts for the synthesizer to Discourse Networks , together with dozens of spiral notepads filled with calculations by hand to Signal-to-Noise Ratio . From there on, a discourse analysis on the basis of paper work will no longer be sufficient. So historians are lucky that the challenges posed by Kittler’s digital legacy have been met by the archive and by a new tool genuine to Digital Humanities. When in the near future, the Indexer will be available for public research it will provide an indispensable access to an exemplary case where the theory and the praxis of media unfold upon each other. 

For sure, the Kittler, who in the 1980’s outlines a media theory on the basis of the personal computer is a fantasy. But from here the question arises: in which way did using a computer shape Kittler’s media theory in the 1990s? And what was his hacking about? The first clue might be in the following model research. 


# Model research 


To tackle the question as to when Friedrich Kittler began working with a personal computer, the Indexer’s simplest and statistically most reliable search option is to look for modification times. A query for the years 1980 to 1988 will not lead to a single file created by Kittler, whereas among the 774 results of modification time : 1989 there is a considerable number (Figure 1). 


# Results of the modification time: 1989 search. 


The first entry is the word-file realnot.txt containing notes to the essay Real Time Analysis, Time Axis Manipulation , first published in 1990 (the corresponding word file is realtime.txt which was modified 1990-07-21). The next one, info.txt , does not belong to an essay by Kittler, but is a Microsoft word 5.0 manual’s appendix. Word-files can be identified as Kittler's simply because the texts bear the author’s name and can be matched with publications. Altogether there are 83 files corresponding to six essays. This finding neatly concurs with the inventory of typed papers in the German Literature Archive. So far we can conclude that in the summer of 1989 Kittler swapped his typewriter for a word processor. 

Running through modification time 1989 leads to another finding: Kittler’s first hardware no longer persists. Though realnot.txt stems from the hard drive partition hd04_p01 , which actually formed part of Kittler’s last computer, the path root/texte_89-99/kittler/89 reveals that it got there via a back-up device. The one in question here is an optical disk, but for the largest part, the files of 1989 originate from floppy disks. Unfortunately, there is still a considerable amount of floppies not ingested in the Indexer yet. Although in these floppies’ listings no file by Kittler prior to 1989 can be identified, the Indexer’s current ingest cannot deliver sufficient proof. 

At any rate, a machine can only deliver the data it is fed with, so the year 1989 has to be counterchecked by philological evidence. Here, the Indexer offers a full text search. Key words may be sampled from the interview cited above. In 2008 Kittler recalls that the first computer hardware his students in Bochum forced upon him was a 386 . 


# The maschine.txt file yielded by the boot hardware 386 query. 


The query for text boot hardware 386 leads to maschine.txt (Figure 2). In this file, Kittler kept a journal documenting his computer labor. The records are sorted chronologically by subject headlines, starting with SYSTEM PROBLEME and ending with notes on individual executable programs. The first recorded system problem testifies that booting a 386 could result in a catastrophe , when new hardware conflicted with old configurations. In 1990, Kittler had to deal with further catastrophes, bereavements and lies (to quote from MASCHINE.TXT , see Figure 2). In terms of chronology, the earliest date found in the rubric SPEED is March 1989. 


# Results returned (22) when searching for maschine.txt 


To learn more about this document we have to consult the metadata (Figure 3). There are 22 copies in 6 different versions growing from 164 kilobyte in 1993 to 259 kilobyte in 1999. In the Indexer’s first testing phase, when I collocated Kittler’s papers to files, I asked Jürgen Enge if there was a way to eliminate binary-identical copies. He declined my request instantly, because in two years from now, you will ask me: ‘how often did Kittler save a particular file?’ It didn’t take that long, for today, I think it is an interesting piece of information, that machine.txt was saved 22 times, itinerating through all hardware upgrades, from hard drive to floppy to hard drive to optical disk to hard drive. 

Another four copies appear by the Indexer’s auto-complete function when the file name is being entered. In 2000 under the operating system Linux, maschine.txt was converted into maschine.lat and last modified in 2003, where the history of this file ends. It seems rare, though, that after so many back-ups Kittler should have ended his computer journal then. Another look at the metadata tells that maschine.lat was deposited in a directory called info . 


# Results yielded by the kittler/info path. 


Proceeding to info we find configuration notes and files named laptop , manual.utf , zutun ( to do ), komment , maschine.lat , of which komment is heir to maschine.lat (Figure 4). The file komment was last saved on August 18th 2011. While this is the definite end of Kittler’s personal computer history, for a full documentation we have to go back to its beginnings in 1989. 

In the Indexer, files are retained and available in their original formatting, nested metadata included. Converting an old MS-DOS Word document into a modern format discloses the metadata (Figure 5). 


# Metadata traces visible upon opening an old MS-DOS file in a recent version of Microsoft Word. 


The file turns out to be created as Kritik on May 11th 1989, and afterwards, past March 9th 1991, re-saved as maschine.txt . The change of file names coincides with new hardware. An ASUS EISA 486 replaced the 386 Seagate on March 26th 1991. 


# Contents of the retrieved KRITIK.TXT file. 


The file KRITIK.TXT is still retrievable (Figure 6). Compared to its successor it lacks in terms of systematics. There are no headlines, and less exact dates. Post-March, for 1989, there is a single, but very precise date. On August 11th, 22.00 hours a fatal error occurred during compiling a C-code called TRIGMARK.C . We will come back to it. For the current state of evidence, KRITIK.TXT is the first trace of Kittler’s use of a word processor. 

Specialists may decide whether it is worthwhile to analyze the hundreds of kilobytes or pages Kittler’s computer journals amount to. For now it is enough to get an idea from the filenames. When in 1989 Kittler engaged with a universal machine in form of the personal computer, his critique was harsh. The 486-machine deserved to be named as such, though it was still under review. Even though further hardware upgrades resulted in more contentment, the sober Linux-style commenting surely is due to the operating system. 

In terms of a Kittler-Philology or historiography, the files of the early 1990s are a source code for Kittler’s essays There is No Software or Protected Mode . There, Kittler alludes to the good old times when even literary critics could do whatever they wanted with Intel’s 80386 Processor (that is changing stack registers to make them fit into a synthesizer’s module) . From today’s perspective, these essays themselves date back to the good old times when even a professor of media studies could scrutinize the hard- and software he worked with. If these days are gone, the corresponding files offer a singular insight into an interesting time slot in the history of the personal computer. 


# Early programming 


KRITIK.TXT relates to the trivial case that a computer is used as a typewriter . First specimens of a less trivial use can be found by running through the 744 results for modification time 1989. The list comprises text files by Kittler and others, C-codes typed out by Kittler and others, bundles of software, compiler libraries and so forth. There is a short cut, too. Following the clue about TRIGMARK.C -compiling disaster in August 1989, its file name leads to floppy disk 009 . Unfortunately, this one is defective and the content most probably lost. The remaining metadata, however, provide a good deal of information, since floppy 009 is the first backup collection of C-codes dating from February 1993 down to July 1989. 


# TRIGMARK.C belongs to a set of C-codes. 


As it turns out, TRIGMARK.C belongs to a set of C-codes (Figure 7). Its full title Trigramm Markov unscrambles the filenames TRIGLESE.C as read trigram , TRIGSPEI.C as save trigram , and so forth. Where there are trigram-codes, predicting to the probability of three words following each other in a given text sequence, there should at least be codes for digrams and unigrams, too. DIGMARK.C , DIGOUT.C , DIGRAM.C , DIGSPEI.C , etc. and GRAM.C , GRAM1.C , GRAM2.C , etc. are all saved on floppy 009 as they were modified in 1989 and 1990. For higher n-grams we would have to scan various data volumes, including the latest hardware partitions. There, markov.c as Kittler’s Markov-generator was named, can be found, too. 

These codes give the first testimonies of Kittler’s personal computer-based study of Markov-chains, the core, one might say, of Digital Humanities, since they constitute computer-based text analysis. Kittler’s interest, though, rested on the central role they play in Claude Shannon’s information theory. 


# Code family of Floppy 009. 


Floppy 009 contains another code family, which Kittler kept tending from then on (Figure 8). A 1989-file JULSIN.C meets its sisters JULIA.C , JULIAMAP.C and so forth (altogether there are 18 JUL -somethings, for the most part modified in April 1990), and its nine cousins MANDLOG.C , MANDMEM.C and so forth. All of them orbit around Julia and Mandelbrot sets, the famous modules of fractal geometry, which were very much in vogue in the early 1990s. In respect to what happens to mathematics once it is fed into a computer, they are a classic as well. 

The functions developed by Gaston Julia by the end the First World War (and later on by Benoît Mandelbrot), the mathematician could only conceive in his head and later on put down on paper in form of formulas. All the iterations it takes to decide if a value takes off to infinity or if it stays within certain limits are beyond the limits of human brains, but are the essential task of computers. The difference makes an eye catcher in well-known computer generated pictures. 


# C-codes related to mathematical functions 


Further C-codes may be gathered in a group of classic mathematical functions (Figure 9). The files BEZIER.C , CHOLESKY.C , DURBIN.C , EULER.C , FIBONAC.C , FOURIER.C , GAUSS.C , HOPFIELD.C , NEWTON.C , ROESSLER.C bear names of mathematicians, sometimes abbreviated, like TSCHEBY.C (for Chebyshev) or scrambled in order to fit into the restriction of 8-ascii character per filename, like WIENGAUS.C (Wiener Gauss) or WIENDURB.C (Wiener Durbin). One of the most beloved heroes in the history of mathematics, Leonhard Euler, shows up in PEULER1.C , PEULER2.C , EULIN.C or is related to GAMMA.C , BZETA.C , COMPLEX.C . 

Many of these files were saved on further non-corrupted back-ups and can be examined. The group can easily be completed with specimens derivable from different volumes, again up to the latest hardware. Some soon became part of Kittler’s long-term raytracing-project, and at the same time, were tended as individual little programs for different purposes. So it is not surprising, that choosing one of them, EULER.C , yields to 21 results. The modification-times range from September 1990 to July 2011 (Figure 10). 


# The modification times of EULER.C range from September 1990 to July 2011. 


The contents of EULER.C illustrated in Figure 11 are disappointing. 


# EULER.C. 


The code lines only ask for wanted iterations and give out the calculated values. All mathematics is up to a function called feul , processed in FEUL.ASM . That is to say, the high-level programming language is for the interface, the low-level programming language is for higher mathematics. 

This measure has benefits, as Kittler repeatedly insisted. It speeds up processing, reduces compiler and interpreter actions and induces a more elegant style of encoding. Above all, it testifies a true computer literacy, because assembler only uses the commands that are implemented on the processor chip. Still, there is another point, which might be of epistemological interest, too. 

Unfortunately, FEUL.ASM , together with most of Kittler’s 1990s-assembler codes, has not been ingested in the Indexer yet. In terms of file history, it was soon replaced by EULER.ASM and, under the operations systems Unix and later on Linux, by euler.s . Instead of the early FEUL.ASM euler.s from 1998 may serve an example of Kittler’s most tended collection of functions written in assembly language. 


# Contents of euler.s. 


In euler.s two types of mathematical notation face each other (Figure 12). In the first lines the equation behind /* is commented out . This is for human intelligence only. It remains pure text inert for the program to be generated. In the lines below, the assembler routine breaks it down into pieces, into simple operations like load, add, change, jump, etc. that will deal with the 8 registers of the processor’s floating point unit. Step-by-step, 56 lines of commands (each with the three terms of command, source, destination) re-write the elegant expression Euler and his successor Lorenzo Mascheroni have formulated. Further reading is the task of machines, but on this language level still within the reach of human literacy. 

It would not be so in case of Euler’s formula being re-written in high-level C. The translation into assembler instructions would be up to a compiler, and the thereby automatically generated code would become long-winded and cumbersome, hardly intelligible for human readers. Literacy and numeracy involve style. 

Finally, during the debugging process – while the program is running – the computing operations can be followed step-by-step. At the risk of giving a too personal testimonial, to my experience Kittler was enthralled with debugging. It provided a grasp of mathematics in actu . 

For the purpose of this paper, codes have been treated as text, which of course is a peculiar way to look at them. Another and more adequate way is to deal with Kittler’s codes in their own media – editors, compilers, debuggers. In other words, what is required is a study of Kittler’s programs in action. By this kind of study, the latest Linux-version of euler.s from 2011 could unfold how real numbers are processed digitally, as well as what a generalized Euler-Mascheroni constant is about. 


# Conclusion 


This first overview of Kittler’s programming shows that exploring mathematics was its genuine purpose. More precisely, it selected some branches of mathematics close to the history or theory of computing. Marchov chains, via information theory, form part of the media archeology of computers themselves. Fractal geometry belongs to the theory of numbers and computability. The concept of functions and the differential calculus, developed from the 18th century onwards, Kittler regarded as the most powerful part of science mapping the outlines of technology. Since there is no Platonic heaven, not even for mathematics, media history’s task lays in deciphering and describing its languages and notation systems as the basis of ideas. The condition of modern technology depends on how the tools the history of mathematics bequeathed us with are processed. They have to pass through the gates of Turing’s 0s and 1s and emerge as programs or digital tools. 

The personal computer, I may conclude, was Kittler’s medium to upload mathematics. To him, the relevance of such an undertaking was out of question. Without the discovery of partial differentiation equations, no single modern chip or radio receiver or transmitter could either be conceived or constructed . The same holds true for the mathematics of the Internet or of smart phone apps, although these fields did not lay within Kittler’s interest. Instead, his study turned to the history of numbers and algorithms. This way of thinking could not be but inspired by computers. Evidently, computer graphics and computer music 'first and foremost' continue the modern traditions of linear perspective and tempered scale. They automatize in the shape of algorithms certain regularities that from a historical point of view are contingent achievements of European cultural history rather than natural matters of course. The obvious question – albeit rarely posed – is therefore which mathematical and technological junctures lead to these algorithms that the 19th century subsequently proceeded into rigid mechanical hardware (film, phonography, gramophones, etc.) and the 20th century into programmable software? . 

Coming back to the question which effect did the use of the personal computer have on Kittler’s media theory, perhaps too blunt an answer would be that it was sublated. Thinking or understanding media requires mathematical information. In the late 1990s a research program evolved to capture mathematics as a cultural force . This endeavor, finally, led Kittler to ancient Greece where he listened to the call of the Sirens and never returned. Of his last mammoth project Music and Mathematics , which was supposed to span from antiquity to Turing-Time , only the first two volumes could be finished. Still, a very stupid machine (to quote Jürgen Enge on the Indexer) can deliver some missing parts. The directory musik contains a series of lectures Musik und Mathematik I given at the Humboldt University in the summer of 2000 (Figure 13). In lecture 8, for example, the invention of decimal numbers is related to the invention of the synthesizer when Simon Stevin meets Robert Moog . 


# Contents of the musik directory. 



# Acknowledgements 


I am very much indebted to Peter Berz for his patience and persistence in discussing Friedrich Kittler's codes and this article with me. 


# notes

[^1]: Kittler’s
                        lectures and seminars are listed in .
[^2]: Another
                        step in history on a conceptual basis, Kittler
                        discerned the advent of the new paradigm of quantum
                            computers, which shift from discrete binary states to wave
                        systems. While any massive combination of
                            many, many Turing machines does not result in anything better than the simple Turing machine,
                        with the possibility of quantum
                                computing, Turing has turned out not to be the technical end of
                                history.
[^3]: The
                        German word versenkt (sunk-in) is
                        Kittler’s term for implemented or hidden technology. Programs sunk-in
                        hardware process more efficiently, but, at the same time, are put out of
                        reach .
[^4]: For further discussion of Kittler and the Digital
                        Humanities see . Niebisch points out that
                        Kittler’s lack of interest in the Internet puts him at distance to Digital
                        Humanities. Indeed, Kittler’s hardware-fetishism or hardware-dependency literally cut a link
                        to today’s research infrastructure. As to the Internet, his statements came
                        up rather grumpily, with the decisive exception of the operating system
                        Linux as one of (its) most
                            brilliant outcomes.
[^5]: Kittler’s understanding of his
                                programming coincides with this figure of the hacker and aligns
                                itself with it. This suggested identification seems to be enough to describe
                        Kittler’s programming activities as hacking. To my
                        knowledge, Kittler never wrote a hack. There was a plan once to design an
                        operating system, which never got any further than the first thought . The archival evidence of this is to
                        be found in .
[^6]: Matthew Kirschenbaum on
                        Twitter, Feb. 28th 2015, https://twitter.com/mkirschenbaum/status/571807067092230148
[^7]: A four page typoscript by Kittler (Bestand
                        A: Kittler / Deutsches Literaturarchiv Marbach, Box 113, folder 2) lists
                        writing and publishing dates for his books, articles, and translations from
                        1969 (his thesis on Friedrich Hebbel) to March 1989 (History of Communications Media). The last item is Unconditional Surrender which comes without a date
                        (special thanks to Moritz Hiller).
[^8]: For a detective story
                        of how Shannon’s Mathematical Theory of
                            Information found the way into Kittler’s work precisely after
                        having finished Discourse Networks, see . According to the list mentioned above, Kittler’s
                        first essay on Turing (Das Gespenst im Computer. Alan
                            Turing und die moderne Kriegsmaschine) was written in August
                        1984. A German edition of Turing’s works edited together with Bernhard
                        Dotzler was published in 1987 (Alan M. Turing, Intelligence Service. Schriften. Brinkmann and Bose, Berlin).
                        Selected writings by Shannon were edited together with Peter Berz, David
                        Hauptmann and Axel Roch in 2000 (Claude Elwood Shannon: Aus / Ein. Ausgewählte Schriften zur Kommunikations- und
                            Nachrichtentheorie. Berlin: Brinkmann und Bose).
[^9]: For Kittler’s synthesizer
                        see . Sebastian Döring and Jan-Peter E.R. Sonntag
                        have presented an approach to reading the becoming of a media theory out of
                        the circuits of Kittler’s modular synthesizer. Currently they are preparing
                        an online-publication of Kittler’s synthesizer circuits and circuit
                        diagrams. They also will edit a selection as part of Kittler’s Collected Writings (Gesammelte Schriften, Wilhelm Fink Verlag, Paderborn).
[^10]: This is to mention only
                        some landmarks in Kittler’s oeuvre: The Mechanized Philosopher (in: Laurence A.
                        Rickels (ed.), Looking After Nietzsche.
                        Albany/N.Y. 1990, p. 195-207) was first published in 1985; Signal-to-Noise Ratio (in: Friedrich Kittler,
                            The Truth of the Technological World. Essays on the
                            Genealogy of Presence. Stanford 2014 pp. 165-177) was first
                        published in 1988; Die Nacht der Substanz (Bern
                        1990) (The Night of Substance) on Hegel’s
                            Phenomenology of Spirit and his card
                        indexer, will be published in a forthcoming volume Friedrich Kittler, Brilliant Pebbles, edited by Tania Hron, Sandrina
                        Khaled and Geoffrey Winthrop-Young.
[^11]: The Indexer offers a search option for
                        creation times, too. These, however, are not reliable as they depend on
                        storage devices. The accuracy of modification times has been tested by
                        comparing dates of text files to other documents, such as calendars,
                        letters, etc.
[^12]:  Most of the 300 5.25" floppies which were subsequently
                        delivered to the GLA in the summer of 2014 contain commercial software as
                        can be judged from the index of the metadata. There are, however, some items
                        of interest. Floppy 352 contains a full set of c-libraries, dating from
                        February 1989, and among it a HELLO.C. One could conclude that Kittler
                        started programming in C around that date, but until these data are ingested
                        and can be examined, this remains a speculation.
[^13]: As Heinz Werner
                        Kramksi told me, these files are astonishingly similar in structure to the
                        sys-doc mails the group of Scientific Data Processing at the German
                        Literature Archive, Marbach uses to document analytical work on hard- and
                        software.
[^14]: From
                        here the study of Markov chains as it was pursued in Kittler’s seminars may
                        well serve as an example for a media-archeological approach to the computer
                            . To name some results of the expertise
                        fostered on code-studies à la berlinienne: Philipp von Hilger’s
                            Mind Reading Machine which (together with
                        Peter Berz’ Maze Solving Mouse following
                        Shannon’s automat) formed part of the exhibition 7
                            Hügel – Bilder und Zeichen des 21. Jahrhunderts (Berliner
                        Festspiele 2000) or Philipp von Hilger’s and Vladimir Velminky’s German
                        edition of Andrej Andrejewitsch Markov’s treatise (Andrej A. Markov, Berechenbare Künste. Zürich, Berlin: Diaphanes
                        2007).
[^15]: For a comprehensive depiction on Mandelbrot, see . See also  and
                            . In two lectures Source
                            Code als Quelle, Peter Berz and Paul Feigelfeld use Kittler’s
                        final Julia-programs as examples of how to scrutinize source codes and their
                        different layers of headers, compiler scripts, interfaces, C- and
                        assembler-codes.
[^16]: As regards to codes, the question of authorship seems inept,
                        but there is an archival interest as to which codes are typed out by
                        Kittler, which he came up with by himself or which are foreign altogether.
                        Traces of Kittler’s authorship are discernable by the
                        idiosyncratically abbreviated German file names, by comments in slashes and,
                        indeed, by style. Some come with a documentation, e.g. ROESSLER.C’s source is /*Becker/Dörfler, 76+291*/,
                        probably Karl-Heinz Becker’s and Michael Dörfler’s Dynamical Systems and Fractals (1989). Further single remnants
                        from 1989, saved only once on floppy 009, Kittler might have considered not
                        worth keeping and tending. The file names of a group dating from July 1989
                        give the idea of tentative steps: EINFALT.C,
                            EINFOUR.C, EINHILB.C, EININT.C, EINPFT.C, etc. It’s highly speculative, but I
                        would read: Euler in Fourier, Euler in Hilbert or simply e
                            in Hilbert.
[^17]: E.g. FEUL.ASM, FEUL1.ASM, FZETA.ASM, FGAMMA.ASM, FGAUSS.ASM, FOURIER.ASM, FOURIER5.ASM, FOURIER6.ASM are listed on floppy 300 and 321. The numbering
                        may indicate that these are apprentice pieces. There is a HELLO.ASM saved on 1990-07-06, which hints to a
                        date as to when Kittler started computer programming in assembler. He was
                        familiar with assembler code instructions since the days of his
                        Harmonizer.
[^18]: A
                        project of Peter Berz and Paul Feigelfeld on Kittler’s Programming Oeuvre aims at facilitating such research. An open
                        source platform will give access to codes, interfaces, compiled programs,
                        etc. so that an interested user may study, patch and test, develop and
                        purloin Kittler’s codes and see what pathways into the history of
                        mathematics they disclose. This Internet-edition will be accompanied by a
                        printed manual as part of Kittler’s Collected
                            Writings (Gesammelte Schriften,
                        Wilhelm Fink Verlag Paderborn). Kittler’s manual.utf (a kind of text book he handed over to the
                        programming seminar’s students) will be edited, some model analysis of
                        programs will be provided, and the history of Kittler’s idea to introduce
                        programming skills in Cultural Studies and media theory will be documented.
                        For manual.utf (#1001.10541, text/x-c (2011-08-03T01:10:22Z). manual.utf.
                        In: Bestand A:Kittler/DLA Marbach. xd002:/kittler/info [xd,
                        277.48 KiB].) see  and ,
                        and .
[^19]: Friedrich Kittler: Musik und Mathematik.
                            Band I: Hellas, Teil 1: Aphrodite. München: Wilhelm Fink Verlag,
                        2006. Musik und Mathematik. Band I: Hellas, Teil 2:
                            Eros. München: Wilhelm Fink Verlag, 2009. The forthcoming torso
                        of Musik und Mathematik II. Roma aeterna 1. Sexus, 2.
                            Virginitas, ed. by Gerhard Scharbert is part of Kittler’s
                        Gesammelte Schriften (Wilhelm Fink Verlag, Paderborn).